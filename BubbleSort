有效交换（int A []，int i，int j）
{
    int 温度 = A[i];
    A[i] = A[j];
    A[j] = 温度；
}

void BubbleSort(int A[], int n)
{
    对于（int j = 0 ; j < n - 1 ; j++) // 每次最大元素就像气泡一样"浮"到数组的最后
    {
        for (int i = 0；我< n - 1 - j; i++) //依次比较相邻的两个元素,使较大的那个向后移
        {
            if (A[i] > A[i + 1 ]) //如果条件改成A[i] >= A[i + 1 ],则变为不稳定的排序算法
            {
                交换（A，i，i + 1）；
            }
        }
    }
}

int指向()
{
    int A[] = {    6 , 5 , 3 , 1 , 8 , 7 , 2 , 4    } ; // 从小到大冒险泡沫排序
    int n = sizeof(A)/sizeof(int);
    冒险排序（A，n）；
    printf( "冒泡排序结果：" );
    对于（int i = 0 ; 我<n；i++）
    {
        printf( "%d " , A[i]);
    }
    打印（“ \ n”）；
    返回0；
}
